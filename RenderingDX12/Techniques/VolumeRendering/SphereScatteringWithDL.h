float1 reluActivation(float1 x) { return max(0, x); }

float2 reluActivation(float2 x) { return max(0, x); }

float3 reluActivation(float3 x) { return max(0, x); }

float4 reluActivation(float4 x) { return max(0, x); }

void PathGen_layer_0(in float4 i0, in float4 i1, in float4 i2, out float4 o0, out float4 o1, out float4 o2) {
	float4x4 m_0_0 = float4x4(0.06341773f, 0.06827045f, -0.657605f, -0.27048978f, -0.015152296f, 0.0069905645f, -0.06370056f, -0.0025741844f, 2.4701598f, -3.1156428f, -4.034672f, 1.1621872f, -0.014608736f, -1.2160923f, 0.9544295f, 0.16379407f);
	float4x4 m_0_1 = float4x4(0.085403614f, -0.5490921f, -0.7594415f, 0.1345494f, -0.016751545f, -0.60583663f, 0.030552486f, 0.0105705f, -0.069142275f, 0.07259623f, -0.3609483f, -0.22601882f, -0.037789237f, 0.036569174f, -0.03803919f, -0.0842723f);
	float4x4 m_0_2 = float4x4(0.11431175f, 0.09019636f, 0.18489352f, 0.06859953f, -0.022960942f, -0.0056004245f, 0.012657225f, -0.0057157436f, -0.035456184f, -0.082783334f, -0.3600684f, -4.0453234f, -0.028646966f, -0.035018202f, -0.14857411f, -0.05635367f);
	float4x4 m_1_0 = float4x4(-0.004217464f, -0.00041435807f, 0.00421241f, -0.009338119f, -0.010644435f, -0.0040338836f, -0.021829674f, 0.003499293f, 0.0141662415f, -0.0035935056f, 0.026462264f, -0.03919453f, -0.00012683654f, -0.003677559f, 0.018863972f, 0.0012034491f);
	float4x4 m_1_1 = float4x4(0.0038315493f, 0.058763772f, -0.001614833f, -0.00016325481f, -1.1969438f, -0.02703819f, -0.011798332f, 0.012706751f, 0.061276373f, -0.029130438f, -0.027338305f, 0.9666219f, -2.0404303e-05f, 0.049065363f, -0.02053541f, 0.007259137f);
	float4x4 m_1_2 = float4x4(0.011497064f, 0.007685881f, -0.012237695f, -0.014901731f, -0.012962649f, 1.2222034f, -0.105096966f, 0.01206685f, -0.46044675f, -0.048146553f, -2.4253645f, 0.02899888f, 0.020091545f, 0.0030033176f, -0.008075263f, -0.011567066f);
	float4x4 m_2_0 = float4x4(-0.008406522f, 0.0018800497f, -0.022310194f, -0.0006060119f, -0.020156926f, 0.0010466481f, 0.017619412f, -0.009984372f, -0.0022653495f, -0.007988834f, -0.020947846f, -0.010683791f, 0.009456921f, -0.006796607f, -0.041892678f, 0.00459584f);
	float4x4 m_2_1 = float4x4(0.013902879f, -0.046677172f, 0.0013259547f, 0.007715431f, -0.0053873556f, -0.040328495f, -0.0042553404f, -0.004409633f, 0.0010874209f, -0.019244375f, -0.0036569876f, -0.018123293f, 0.007313742f, -0.032265283f, 0.015693445f, 0.004827959f);
	float4x4 m_2_2 = float4x4(-0.025834406f, -0.0058222646f, -0.018377572f, 0.0008373629f, -0.023901224f, 0.0074510504f, -0.027016858f, 0.0065664463f, 0.0049794107f, -0.020625077f, -0.0029600554f, -0.008864626f, 0.0002751726f, 0.004120887f, 0.020118074f, -0.0049175643f);
	float4 w0 = float4(1.3818141f, 3.021424f, -2.1888144f, 1.9936168f);
	float4 w1 = float4(0.35520425f, -0.61970806f, 1.4731084f, 0.0865552f);
	float4 w2 = float4(-0.05304928f, 0.32745373f, -1.7057233f, 1.9807464f);
	o0 = reluActivation(mul(i0, m_0_0) + mul(i1, m_1_0) + mul(i2, m_2_0) + w0);
	o1 = reluActivation(mul(i0, m_0_1) + mul(i1, m_1_1) + mul(i2, m_2_1) + w1);
	o2 = reluActivation(mul(i0, m_0_2) + mul(i1, m_1_2) + mul(i2, m_2_2) + w2);
}

void PathGen_layer_1(in float4 i0, in float4 i1, in float4 i2, out float4 o0, out float4 o1, out float4 o2) {
	float4x4 m_0_0 = float4x4(0.28930953f, -0.7127941f, 0.022170944f, 0.13008736f, 0.016147371f, -0.015510509f, -0.1134157f, -0.05118988f, 0.03411879f, -0.22615808f, -0.05205623f, -0.13021266f, 0.0490682f, -0.09269482f, 0.0023817564f, -0.50470734f);
	float4x4 m_0_1 = float4x4(0.18162525f, -0.6417884f, -0.6176644f, -0.6917808f, -0.0795347f, -0.17138346f, 0.013159456f, -0.25173125f, -0.10350933f, -0.36086896f, -0.4347823f, -0.047448266f, -0.3602206f, 0.039843064f, -0.06090671f, -0.83708274f);
	float4x4 m_0_2 = float4x4(-0.597129f, -0.88292634f, 0.31689918f, 0.07319501f, 0.009914831f, -0.75033176f, -0.5714538f, 0.7314541f, -0.4299369f, 0.34964344f, 0.09394108f, -0.34889525f, -0.091955185f, -0.770724f, 0.04921658f, -0.041208223f);
	float4x4 m_1_0 = float4x4(0.021066058f, -0.034864374f, -0.28128535f, 0.08754741f, 0.3816964f, 0.04550654f, -0.40493372f, -0.07811348f, -0.021606566f, -0.08633547f, 0.019884732f, -0.21883498f, 0.2134548f, 0.6153437f, -0.18838067f, 0.12317542f);
	float4x4 m_1_1 = float4x4(0.14060506f, -0.51717144f, 0.7085679f, -1.031972f, 0.24620797f, 0.29034188f, -0.52025366f, 0.07083644f, 0.62527907f, 0.09815063f, -0.11679178f, -0.359564f, 0.15890165f, -0.049235214f, 0.05000227f, -0.5618033f);
	float4x4 m_1_2 = float4x4(-0.23500603f, -0.018238524f, -0.0050298986f, -0.011551412f, 0.2724844f, 0.42542174f, 0.5201764f, 0.24059205f, -0.10978796f, -0.046410188f, 0.029119456f, 0.024004033f, 0.06246869f, -0.3537942f, -0.050535373f, -0.04585816f);
	float4x4 m_2_0 = float4x4(-0.03748437f, -0.5464527f, -0.28279394f, 0.09524455f, 0.012792966f, -0.029321022f, -0.30016568f, 0.08776058f, -0.28978327f, -95.63843f, -0.6759924f, 0.080697216f, 0.1386987f, -0.50290996f, 0.104233205f, 0.04063871f);
	float4x4 m_2_1 = float4x4(0.16937996f, -0.40597445f, 0.17551652f, -0.0021097886f, 0.14241946f, -0.7085469f, -0.23284207f, -0.119195424f, 0.062265422f, 0.06800934f, -0.017926816f, 0.080462135f, 0.02878547f, -0.2643262f, -0.39699087f, 0.10280551f);
	float4x4 m_2_2 = float4x4(0.1847058f, -0.07683677f, -0.13353452f, -0.1644033f, 0.7036177f, 0.21806595f, -0.006020512f, -0.015118537f, -0.037801657f, -0.20533027f, 0.023306761f, 0.008629185f, -0.4000754f, -0.2150973f, 0.59210587f, -0.43717217f);
	float4 w0 = float4(0.43003815f, 2.6046848f, -0.27311784f, 1.0522541f);
	float4 w1 = float4(-0.5031454f, -0.17902604f, 1.4269748f, -0.68941915f);
	float4 w2 = float4(1.466309f, -0.43407345f, 0.7410349f, -0.73323715f);
	o0 = reluActivation(mul(i0, m_0_0) + mul(i1, m_1_0) + mul(i2, m_2_0) + w0);
	o1 = reluActivation(mul(i0, m_0_1) + mul(i1, m_1_1) + mul(i2, m_2_1) + w1);
	o2 = reluActivation(mul(i0, m_0_2) + mul(i1, m_1_2) + mul(i2, m_2_2) + w2);
}

float1 tanhActivation(float1 x) { return tanh(x); }

float2 tanhActivation(float2 x) { return tanh(x); }

float3 tanhActivation(float3 x) { return tanh(x); }

float4 tanhActivation(float4 x) { return tanh(x); }

void PathGen_layer_2(in float4 i0, in float4 i1, in float4 i2, out float4 o0) {
	float4x4 m_0_0 = float4x4(-0.00032497774f, 0.23268548f, -0.0026247432f, 0.02038624f, -0.004692784f, 0.17829543f, -0.0069695967f, -0.016002772f, 0.21445209f, 0.55691713f, -0.39630228f, 0.019869639f, -0.004035972f, -0.012000836f, 0.0032115567f, 0.33269802f);
	float4x4 m_1_0 = float4x4(-0.0004066126f, 0.003089424f, -0.00044859818f, -0.22854388f, -0.3298345f, -0.23729429f, 0.24981298f, -0.3749322f, 0.00038925983f, 0.0043138326f, 0.17808135f, 0.009245971f, -0.014816421f, -0.22684044f, -0.1463655f, -0.30757093f);
	float4x4 m_2_0 = float4x4(0.005609238f, -0.0029062845f, -0.18111092f, 0.01308f, -0.305733f, 0.20784579f, 0.2323242f, -0.09462673f, 0.23181807f, 0.0090003405f, -0.0022691921f, -0.010259006f, -0.23849365f, -0.0031624415f, 0.001791897f, -0.011351103f);
	float4 w0 = float4(0.06403876f, -0.3670605f, 0.004636097f, 0.0055026333f);
	o0 = tanhActivation(mul(i0, m_0_0) + mul(i1, m_1_0) + mul(i2, m_2_0) + w0);
}

void PathGen(float _input[12], out float _output[4]) {
	float4 n_0_0 = (float4)0;
	float4 n_0_1 = (float4)0;
	float4 n_0_2 = (float4)0;
	float4 n_1_0 = (float4)0;
	float4 n_1_1 = (float4)0;
	float4 n_1_2 = (float4)0;
	float4 n_2_0 = (float4)0;
	float4 n_2_1 = (float4)0;
	float4 n_2_2 = (float4)0;
	float4 n_3_0 = (float4)0;
	n_0_0[0] = _input[0];
	n_0_0[1] = _input[1];
	n_0_0[2] = _input[2];
	n_0_0[3] = _input[3];
	n_0_1[0] = _input[4];
	n_0_1[1] = _input[5];
	n_0_1[2] = _input[6];
	n_0_1[3] = _input[7];
	n_0_2[0] = _input[8];
	n_0_2[1] = _input[9];
	n_0_2[2] = _input[10];
	n_0_2[3] = _input[11];
	PathGen_layer_0(n_0_0, n_0_1, n_0_2, n_1_0, n_1_1, n_1_2);
	PathGen_layer_1(n_1_0, n_1_1, n_1_2, n_2_0, n_2_1, n_2_2);
	PathGen_layer_2(n_2_0, n_2_1, n_2_2, n_3_0);
	_output[0] = n_3_0[0];
	_output[1] = n_3_0[1];
	_output[2] = n_3_0[2];
	_output[3] = n_3_0[3];
}
void ScatGen_layer_0(in float4 i0, in float4 i1, in float4 i2, in float4 i3, out float4 o0, out float4 o1, out float4 o2, out float4 o3) {
	float4x4 m_0_0 = float4x4(0.00015634154f, 0.014175219f, -0.053239338f, -0.0481177f, 0.062448315f, 9.430182f, 0.073923424f, 0.10450343f, -0.028875282f, -0.27253556f, -0.7357531f, -0.8985883f, -0.13407171f, -0.042998157f, -0.008435138f, 0.12907286f);
	float4x4 m_0_1 = float4x4(-0.031240368f, -0.003220962f, 0.007096694f, -0.01555272f, 0.014582453f, -0.122831054f, -0.2616643f, -0.0867042f, -0.26102185f, -0.07106298f, -1.3009834f, 1.2915015f, 2.715128f, -0.18188027f, 0.05699839f, 0.6115323f);
	float4x4 m_0_2 = float4x4(-0.0044185147f, -0.11089892f, 0.0102399f, -0.0036948929f, -0.32745272f, -0.04421748f, -1.8730117f, 0.1468269f, 3.2269175f, -0.12505127f, -0.34166092f, 0.2030345f, 4.625132f, -1.3594385f, 0.6874872f, -0.1488215f);
	float4x4 m_0_3 = float4x4(-0.006967037f, -0.005093318f, -0.022819182f, -0.01864713f, 0.17496955f, -0.08546773f, 0.12911245f, 0.06688261f, 0.44857225f, 0.55165446f, -0.25357807f, -0.3787715f, -0.0025093206f, -2.8911252f, -0.22056963f, 2.5477517f);
	float4x4 m_1_0 = float4x4(-0.049667105f, -0.108205326f, -0.732976f, -1.64442f, 0.3259366f, 0.20768386f, 13.399964f, 0.651419f, -0.406894f, 4.5589814f, -52.455593f, -25.316582f, -0.09705469f, 0.3373061f, 0.28025988f, 0.39159465f);
	float4x4 m_1_1 = float4x4(-9.108611f, 0.20649274f, -0.6694917f, 1.062349f, -0.7021265f, -0.015497766f, 0.0013603969f, -0.08000971f, -34.751427f, 1.5311425f, -0.7675561f, -0.35752025f, 0.48686302f, 1.4593728f, -0.0582325f, 0.05634753f);
	float4x4 m_1_2 = float4x4(1.1736637f, 2.8784444f, -0.06664157f, -0.14732139f, -0.07834492f, 0.5932413f, -0.053652305f, 0.032430787f, -6.1196117f, -2.485832f, 11.393861f, -1.5014939f, -0.24031055f, 0.59299576f, -0.3428225f, -1.2231157f);
	float4x4 m_1_3 = float4x4(0.17392346f, -0.26180524f, 0.57189995f, -0.7197707f, 0.025935546f, -0.12140743f, -4.3559656f, -0.052130274f, 1.8879701f, -0.67765063f, -2.9242632f, -3.8348424f, 0.24742447f, 0.11912875f, 0.11712259f, -0.64985335f);
	float4x4 m_2_0 = float4x4(1.0433779f, -0.06535261f, -0.17972822f, 0.13790487f, -0.001377932f, 0.016313827f, 0.0231482f, -0.0042847893f, -0.009368494f, 0.002330883f, -0.0054763216f, -0.0057165283f, -0.010577324f, 0.015186688f, -0.005351194f, 0.010554697f);
	float4x4 m_2_1 = float4x4(0.042959686f, 0.0027465958f, -0.03123356f, 0.013292404f, -0.00057086314f, -0.0047242367f, 0.004128855f, -0.001662499f, -0.006650309f, -0.014165032f, 0.014774224f, -0.0011943771f, 0.008484457f, -0.012606766f, -0.021605447f, 0.008135652f);
	float4x4 m_2_2 = float4x4(-0.0024162568f, 0.009311906f, 0.042204615f, -0.001062729f, -0.005552107f, -0.02271808f, 0.00051542337f, -0.0054103f, 0.013312531f, 0.022046866f, 0.005611668f, -0.006116142f, 0.0035548098f, 0.00062888843f, 0.012423253f, 0.00971063f);
	float4x4 m_2_3 = float4x4(-0.012198654f, -0.0017575001f, 0.08215797f, 0.013837143f, -0.0017670585f, 0.0044423984f, 0.0009752625f, -0.014712667f, -0.0071540163f, 0.011516326f, 0.001410922f, -0.0025774022f, 0.006430327f, -0.0039598527f, -0.0070304764f, -0.004779439f);
	float4x4 m_3_0 = float4x4(0.06870763f, 0.16455133f, 0.12410043f, 0.1297345f, 0.020274315f, -0.0026611453f, 0.0028930237f, 0.0049905074f, -0.010090821f, -0.008477058f, 0.0019509216f, -0.0033501978f, 0.002314708f, 0.010276602f, 0.0040155496f, 0.0012884004f);
	float4x4 m_3_1 = float4x4(-0.066428155f, 0.0042415154f, 1.0005196f, -0.6606695f, -0.0057666735f, 0.0015605157f, -0.009962317f, -0.00457274f, -0.005441608f, -0.010395975f, -0.008607551f, 0.0060956497f, 0.00036282418f, -0.019497745f, 0.0026433396f, -0.0030018513f);
	float4x4 m_3_2 = float4x4(-0.3072861f, -0.09375087f, 0.010198286f, -0.18551405f, -0.008463753f, 0.00079516054f, -0.0075988397f, 0.004129681f, -0.005067673f, 0.018814808f, 0.018274836f, -0.011257087f, 0.0020426973f, -0.0035569994f, -0.0062620747f, 0.00058934203f);
	float4x4 m_3_3 = float4x4(-1.3827659f, -0.14489396f, 0.10498387f, 0.12168621f, 0.007861409f, -0.008081292f, -0.009679227f, 0.00900013f, -0.0017738456f, 0.0023205208f, -0.013063427f, -0.0024693022f, -0.0077630905f, -0.007398809f, 0.020221878f, 0.013122639f);
	float4 w0 = float4(1.6206856f, -10.670561f, 0.9611019f, 1.2393153f);
	float4 w1 = float4(-0.63925546f, -0.7141817f, 0.34249064f, 0.72549653f);
	float4 w2 = float4(-0.19246179f, 0.11804212f, -3.275886f, 1.5751792f);
	float4 w3 = float4(0.13427886f, 1.4570034f, 0.38875198f, -0.4227308f);
	o0 = reluActivation(mul(i0, m_0_0) + mul(i1, m_1_0) + mul(i2, m_2_0) + mul(i3, m_3_0) + w0);
	o1 = reluActivation(mul(i0, m_0_1) + mul(i1, m_1_1) + mul(i2, m_2_1) + mul(i3, m_3_1) + w1);
	o2 = reluActivation(mul(i0, m_0_2) + mul(i1, m_1_2) + mul(i2, m_2_2) + mul(i3, m_3_2) + w2);
	o3 = reluActivation(mul(i0, m_0_3) + mul(i1, m_1_3) + mul(i2, m_2_3) + mul(i3, m_3_3) + w3);
}

void ScatGen_layer_1(in float4 i0, in float4 i1, in float4 i2, in float4 i3, out float4 o0, out float4 o1, out float4 o2, out float4 o3) {
	float4x4 m_0_0 = float4x4(0.02253003f, 0.014889602f, 0.41962686f, 0.032395456f, 0.21893871f, 0.19901347f, -0.0050647696f, 0.00060026086f, 0.13688128f, 0.09416739f, 1.2655435f, 0.108661324f, -0.2931068f, -0.08990958f, -1.0170178f, -0.49997282f);
	float4x4 m_0_1 = float4x4(0.045151692f, -0.4853847f, -0.02418539f, -0.59776634f, 0.025127763f, 0.20249715f, 0.02973752f, 0.007101375f, 0.073286414f, -0.06989083f, -0.021697462f, -1.8427348f, -0.60238695f, 0.07656594f, 0.20533445f, 1.497205f);
	float4x4 m_0_2 = float4x4(0.06025583f, 0.44170755f, -0.27115506f, -0.49004528f, 0.33700255f, 0.049092244f, -0.06699876f, 0.07346273f, 0.16511449f, 1.3225111f, -0.9866395f, -1.4925065f, -0.60739183f, -1.163633f, 0.64141643f, 1.1624017f);
	float4x4 m_0_3 = float4x4(-0.0029738282f, -0.015893657f, 0.06939793f, 0.14102063f, -0.061129455f, 0.009326437f, 0.51087487f, -0.24029723f, -0.04119432f, -0.02191427f, 0.20995182f, 0.06623258f, -0.036596358f, 0.059745006f, -0.51685f, 0.21754469f);
	float4x4 m_1_0 = float4x4(0.59831816f, -0.7902314f, 0.59602904f, 0.9507073f, -0.18554273f, 0.0324131f, 0.12668487f, 0.029925263f, -0.293293f, -0.028966917f, 0.26137924f, -0.0038604466f, -0.11532589f, 0.22027984f, 0.16232444f, 0.046032194f);
	float4x4 m_1_1 = float4x4(0.96913904f, -0.25059468f, 0.0015631971f, 0.35771966f, -0.23444523f, -0.15544988f, 0.21621056f, 0.16482094f, 0.19787253f, -0.51378214f, 0.32554716f, 0.38600522f, -1.1122817f, -0.29133973f, -0.21388896f, 0.12768212f);
	float4x4 m_1_2 = float4x4(0.7930406f, 0.4735316f, -0.040045697f, 0.17074926f, -0.0834646f, -0.21377006f, -0.073052615f, -0.23142157f, 0.27036804f, 0.06185806f, 0.04553516f, 0.11951378f, -0.41763604f, 0.019259345f, 0.0091513125f, -0.04121668f);
	float4x4 m_1_3 = float4x4(0.3461404f, -0.66138834f, 0.4021828f, -0.1587818f, -0.1727332f, 0.14688805f, 0.0022718157f, -0.18025829f, 0.10495151f, -0.19959429f, -0.005759037f, -0.073271126f, -0.16448347f, -0.018175602f, -0.05019239f, -0.10298266f);
	float4x4 m_2_0 = float4x4(0.502868f, -0.0010888514f, -0.30017453f, -0.27243286f, 0.2762388f, 0.8512166f, -0.09429571f, 0.24262641f, -0.31446928f, -0.25024262f, 0.0016031115f, -0.30270287f, 0.22344236f, 0.071859695f, 0.11600631f, 0.22442687f);
	float4x4 m_2_1 = float4x4(-0.26057667f, -0.18695512f, -0.41916105f, -0.41208464f, -0.003260829f, -0.43020812f, -0.13304308f, -0.072441734f, -0.020860378f, -0.46283206f, -0.007823432f, -0.02863854f, -1.121142f, -0.74219f, -0.1371247f, 0.2714549f);
	float4x4 m_2_2 = float4x4(-0.24079669f, -0.38591152f, -0.07593594f, -0.4762556f, 0.041884564f, -0.15673466f, 0.042809326f, -0.13377394f, -0.548235f, 0.044324372f, -0.037470818f, 0.017275957f, 0.32335186f, -0.20179628f, -0.035194032f, -0.12971431f);
	float4x4 m_2_3 = float4x4(-0.2738709f, 0.09607994f, 0.073932484f, -0.13744372f, -0.1301994f, 0.06824185f, 0.23725414f, 0.39757407f, -0.0015134059f, -0.036950983f, -0.4964114f, -0.5171679f, 0.34706596f, -0.5104777f, 0.43889147f, -0.18587753f);
	float4x4 m_3_0 = float4x4(0.2180765f, -0.09205644f, -0.2173185f, 0.39395162f, -2.0166607f, -0.5441355f, 0.036616065f, -0.107826546f, 0.2825892f, 0.18966612f, 0.014215685f, 0.16406175f, -0.40436313f, -0.27075064f, -0.029762799f, -0.15479816f);
	float4x4 m_3_1 = float4x4(0.17043872f, 0.13382296f, -0.3126726f, -0.28221133f, 0.04261694f, -0.3028997f, 0.02491484f, 0.08746542f, -0.11126441f, -0.33146596f, 0.0036246125f, -0.083794236f, 1.8658707f, -0.5373872f, 0.18280573f, -0.047879983f);
	float4x4 m_3_2 = float4x4(0.23361236f, -0.2039502f, -0.009051525f, -0.27151316f, 0.20229632f, 0.025104055f, -0.0082494365f, 0.06472931f, 0.3570586f, 0.07213176f, 0.46726313f, -0.20570023f, -0.17912662f, 0.21940738f, 0.057474624f, 0.24496964f);
	float4x4 m_3_3 = float4x4(-0.24573256f, 0.041092373f, 0.0186624f, -0.040367074f, 0.1103453f, -0.038516723f, -0.13100316f, -0.07871293f, -0.0429721f, -0.016610192f, 0.37945923f, -2.151787f, -0.23561566f, 0.3986919f, -0.45009965f, 0.13851155f);
	float4 w0 = float4(-0.56222457f, 0.32594022f, -1.1775471f, -0.96759105f);
	float4 w1 = float4(0.11142911f, -0.47557777f, 0.90589136f, 0.038681813f);
	float4 w2 = float4(-0.6124013f, 0.11418284f, 0.7099391f, 1.6047671f);
	float4 w3 = float4(0.41645804f, 1.1619397f, -0.10514605f, 0.4095378f);
	o0 = reluActivation(mul(i0, m_0_0) + mul(i1, m_1_0) + mul(i2, m_2_0) + mul(i3, m_3_0) + w0);
	o1 = reluActivation(mul(i0, m_0_1) + mul(i1, m_1_1) + mul(i2, m_2_1) + mul(i3, m_3_1) + w1);
	o2 = reluActivation(mul(i0, m_0_2) + mul(i1, m_1_2) + mul(i2, m_2_2) + mul(i3, m_3_2) + w2);
	o3 = reluActivation(mul(i0, m_0_3) + mul(i1, m_1_3) + mul(i2, m_2_3) + mul(i3, m_3_3) + w3);
}

void ScatGen_layer_2(in float4 i0, in float4 i1, in float4 i2, in float4 i3, out float4 o0, out float2 o1) {
	float4x4 m_0_0 = float4x4(0.011653435f, -0.11664321f, 0.12768103f, 0.0070080846f, -0.0062875524f, -0.08299314f, 0.14544496f, -0.003071854f, -0.012446713f, -0.046482872f, -0.06124334f, 0.39640412f, -0.007585167f, 0.09170041f, 0.15396687f, -0.012500234f);
	float4x2 m_0_1 = float4x2(-0.17350462f, 0.12484028f, 0.0017000772f, 0.0032727881f, 0.06875966f, 0.1738756f, 0.021707347f, -0.0067306645f);
	float4x4 m_1_0 = float4x4(0.007864221f, 0.054273922f, -0.08306913f, -0.004115911f, -0.43323728f, 0.19296117f, 0.25250518f, -0.07393692f, -0.0047684396f, -0.06822137f, -0.045172933f, -0.026662186f, -0.008440056f, -0.044448715f, -0.043266274f, -0.3198138f);
	float4x2 m_1_1 = float4x2(0.1655072f, 0.018888189f, -0.12402524f, -0.026222998f, -0.32927322f, -0.20996913f, 0.054398917f, 0.15712994f);
	float4x4 m_2_0 = float4x4(0.00054893846f, -0.07123317f, -0.21453656f, -0.0012604545f, -0.0051501966f, 0.039049182f, 0.054115377f, -0.4025769f, 0.115030825f, 0.0025072857f, 0.035376985f, 0.17891856f, 0.002769713f, 0.04386301f, 0.034098186f, 0.35362506f);
	float4x2 m_2_1 = float4x2(-0.028978204f, 0.048640985f, -0.06580231f, -0.16471145f, -0.0044169705f, -0.02350161f, -0.05299592f, -0.14777611f);
	float4x4 m_3_0 = float4x4(0.0042135734f, 0.018750468f, -0.033963006f, 0.0028726202f, 0.0066037383f, 0.012280604f, 0.020092396f, 0.006109199f, 0.0115781585f, 0.2272511f, 0.082447894f, 0.012551762f, -0.14478181f, 0.0023787355f, -0.019336961f, -0.060256924f);
	float4x2 m_3_1 = float4x2(0.053701315f, -0.3321669f, -0.29248452f, 0.16384728f, 0.03683805f, -0.026905218f, 0.00015897673f, -0.0032086798f);
	float4 w0 = float4(-0.02908885f, 0.0002067004f, -0.002767562f, -0.0343464f);
	float2 w1 = float2(0.44051537f, 0.31703675f);
	o0 = tanhActivation(mul(i0, m_0_0) + mul(i1, m_1_0) + mul(i2, m_2_0) + mul(i3, m_3_0) + w0);
	o1 = tanhActivation(mul(i0, m_0_1) + mul(i1, m_1_1) + mul(i2, m_2_1) + mul(i3, m_3_1) + w1);
}

void ScatGen(float _input[16], out float _output[6]) {
	float4 n_0_0 = (float4)0;
	float4 n_0_1 = (float4)0;
	float4 n_0_2 = (float4)0;
	float4 n_0_3 = (float4)0;
	float4 n_1_0 = (float4)0;
	float4 n_1_1 = (float4)0;
	float4 n_1_2 = (float4)0;
	float4 n_1_3 = (float4)0;
	float4 n_2_0 = (float4)0;
	float4 n_2_1 = (float4)0;
	float4 n_2_2 = (float4)0;
	float4 n_2_3 = (float4)0;
	float4 n_3_0 = (float4)0;
	n_0_1[2] = _input[6];
	n_0_1[3] = _input[7];
	n_0_2[0] = _input[8];
	n_0_2[1] = _input[9];
	n_0_2[2] = _input[10];
	n_0_2[3] = _input[11];
	n_0_3[0] = _input[12];
	n_0_3[1] = _input[13];
	float2 n_3_1 = (float2)0;
	n_0_0[0] = _input[0];
	n_0_0[2] = _input[2];
	n_0_0[3] = _input[3];
	n_0_1[0] = _input[4];
	n_0_0[1] = _input[1];
	n_0_1[1] = _input[5];
	n_0_3[2] = _input[14];
	n_0_3[3] = _input[15];
	ScatGen_layer_0(n_0_0, n_0_1, n_0_2, n_0_3, n_1_0, n_1_1, n_1_2, n_1_3);
	ScatGen_layer_1(n_1_0, n_1_1, n_1_2, n_1_3, n_2_0, n_2_1, n_2_2, n_2_3);
	ScatGen_layer_2(n_2_0, n_2_1, n_2_2, n_2_3, n_3_0, n_3_1);
	_output[0] = n_3_0[0];
	_output[1] = n_3_0[1];
	_output[2] = n_3_0[2];
	_output[3] = n_3_0[3];
	_output[4] = n_3_1[0];
	_output[5] = n_3_1[1];
}